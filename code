def extract_data(element, row_data=None, parent_path=""):
    if row_data is None:
        row_data = {}
    for child in element:
        tag = child.tag.split('}')[-1]  # Remove the namespace
        full_tag_path = f"{parent_path}.{tag}" if parent_path else tag
        # Check if the tag is in the dictionary
        if full_tag_path in tag_to_header:
            # If it is, replace the tag with the corresponding header
            tag = tag_to_header[full_tag_path]
        if child.text:
            row_data[tag] = child.text.strip()  # Remove leading/trailing spaces
        else:
            row_data[tag] = None
        extract_data(child, row_data, full_tag_path)  # Recurse into child elements
    if element.tag == '{' + ns['ns'] + '}Document':  # Check if the current element is a Document
        rows.append(row_data)
