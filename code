import unittest
import requests

def is_service_running(service_url, service_name):
    try:
        res = requests.get(f"{service_url}/details", headers={"Content-Type": "application/json"})
        res.raise_for_status()
        running_services = res.json()

        for service in running_services:
            if service["ApplicationId"] == service_name:
                return True

        return False

    except requests.exceptions.RequestException as e:
        raise Exception(f"Failed to fetch service details: {e}")

class TestMiBlotterAutomation(unittest.TestCase):
    def test_kortex_service_running(self):
        service_url = "http://localhost:56002/api/process"  # Replace this with your actual service URL
        service_name = "TNTR.Kortex"

        try:
            if is_service_running(service_url, service_name):
                self.assertTrue(True, "TNTR.Kortex service is running.")
            else:
                self.fail("TNTR.Kortex service is not running.")

        except Exception as e:
            self.fail(f"Error: {e}")

    # Add more test methods for other scenarios in TestBlotterAutomation class

class TestSomeOtherScenario(unittest.TestCase):
    def test_something(self):
        # Your test logic here
        self.assertNotEqual(1, 0)

    # Add more test methods for other scenarios in TestSomeOtherScenario class
